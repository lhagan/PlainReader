
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
	gzip_static on;
	
	types {
	  text/cache-manifest	manifest;
	}

    server {
        listen       8000;
        server_name  localhost;
		
        #access_log  logs/host.access.log  main;
		
		location ~ /newsblur/(reader|api) {
			rewrite /newsblur/(.*) /$1 break;
            proxy_pass http://www.newsblur.com;
            
            header_filter_by_lua '
                local cookies = ngx.header.set_cookie 
                if not cookies then return end
                if type(cookies) ~= "table" then cookies = {cookies} end
                local newcookies = {}
                for i, val in ipairs(cookies) do
                    local newval = string.gsub(val, "([dD]omain)=[%w_-\\\\.]+", "")
                    table.insert(newcookies, newval)
                end
                ngx.header.set_cookie = newcookies
            ';
            
			#proxy_pass http://localhost:9898;
            proxy_redirect off;
		}
		
		location ~ /instapaper/text(.*) {
			rewrite /instapaper/text(.*) /text$1 break;
            proxy_pass http://www.instapaper.com;
            proxy_redirect off;
		}
				
		location / {
			root   /Users/lhagan/Documents/Projects/PlainReader/PlainReader2/src;
		}
		
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    server {
        listen       8001;
        server_name  localhost;
		
        #access_log  logs/host.access.log  main;
		
		location ~ /newsblur/(reader|api) {
			rewrite /newsblur/(.*) /$1 break;
            proxy_pass http://www.newsblur.com;
            
            header_filter_by_lua '
                local cookies = ngx.header.set_cookie 
                if not cookies then return end
                if type(cookies) ~= "table" then cookies = {cookies} end
                local newcookies = {}
                for i, val in ipairs(cookies) do
                    local newval = string.gsub(val, "([dD]omain)=[%w_-\\\\.]+", "")
                    table.insert(newcookies, newval)
                end
                ngx.header.set_cookie = newcookies
            ';
            
            proxy_redirect off;
		}
		
		location ~ /instapaper/text(.*) {
			rewrite /instapaper/text(.*) /text$1 break;
            proxy_pass http://www.instapaper.com;
            proxy_redirect off;
		}
				
		location ~* ^.+\.(png|ico|css|js|html|otf|txt|manifest)$ {
			root   /Users/lhagan/Documents/Projects/PlainReader/PlainReader2/publish;
		}
		
		location ~ /about {
			rewrite .* /about/index.html;
		}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
